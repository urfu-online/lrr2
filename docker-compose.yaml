services:
  backend:
    restart: unless-stopped
    build: ./app
    expose:
      - "8000"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
    links:
      - postgres:postgres
      - redis:redis
    volumes:
      - ./app:/app
    env_file: .env
    environment:
      DEBUG: 'true'
    command: /usr/local/bin/uvicorn lrr.asgi:application --host 0.0.0.0 --reload --loop 'uvloop' --http 'httptools' --no-access-log

  frontend:
    build:
      context: frontend
      target: development
    restart: unless-stopped
    volumes:
      - ./frontend:/app
    ports:
      - "0.0.0.0:${FRONTEND_PORT}:80"
    env_file: .env
    depends_on:
      - backend

  nginx:
    restart: unless-stopped
    build: ./nginx/
    ports:
      - "0.0.0.0:${NGINX_PORT}:80"
    depends_on:
      - backend
    volumes:
      - web-static:/www/static
    links:
      - backend:backend

  postgres:
    restart: unless-stopped
    image: postgres:latest
    ports:
      - "5432:5432"
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data/
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "${POSTGRES_DB}",
          "-U",
          "${POSTGRES_USER}"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  pgbackups:
    image: prodrigestivill/postgres-backup-local
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./${BACKUP_DIR}:/backups
    links:
      - postgres:postgres
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=${BACKUP_SCHEDULE}
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=${BACKUP_HEALTHCHECK_PORT}

  redis:
    restart: unless-stopped
    image: redis:latest
    ports:
      - "6379"
    volumes:
      - redisdata:/data

volumes:
  web-static:
  pgdata:
  redisdata:
